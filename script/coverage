#!/usr/bin/php5
<? # vim: ft=php
/*
  PHP on Crutches - Copyright 2008 Markus Koller

  This program is free software; you can redistribute it and/or modify
  it under the terms of the MIT License. See COPYING for details.

  $Id$
*/

  if (function_exists('xdebug_is_enabled') ? !xdebug_is_enabled() : true) {
    print "You need Xdebug to run this script.\n";
    exit(1);
  } else {
    xdebug_start_code_coverage();
  }

  require_once dirname(__FILE__).'/../config/environment.php';
  require_once LIB.'tests.php';

  require LIB.'coverage.php';

  $logger->level = LOGGER_DISABLED;

  $tests = array();
  $include = array(APP);
  $exclude = array();

  $args = array_slice($argv, 1);
  while ($arg = array_shift($args)) {
    switch($arg) {
      case '-d': $target = array_shift($args); break;
      case '-i': $include[] = realpath(array_shift($args)); break;
      case '-e': $exclude[] = realpath(array_shift($args)); break;
      case '-f': $force = true; break;
      default: $tests[] = $arg;
    }
  }

  $target = realpath(any($target, 'coverage'));

  # Reset the arguments for script/test
  array_unshift($tests, $argv[0]);
  $argv = $tests;

  if (file_exists($target) and !$force) {
    print "Target path $target already exists.\n";
    exit(1);
  }

  # Run the tests and collect coverage data
  require SCRIPT.'test';
  $coverage = xdebug_get_code_coverage();
  xdebug_stop_code_coverage();

  # Include libraries in report if a framework test was selected
  foreach ($paths as $path) {
    if ($path == 'framework' or strpos($path, 'test/framework/') !== false) {
      $include[] = LIB;
      break;
    }
  }

  rm_rf($target);
  $report = new CoverageReport($coverage, $target, $include, $exclude);
  $report->generate() or exit(1);

  # Open the report in a browser
  if (getenv('DISPLAY')) {
    system("x-www-browser $target/index.html &>/dev/null &");
  }

?>
